/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package example1;

import java.awt.Component;
import java.awt.Font;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListCellRenderer;
import javax.swing.DefaultListModel;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JOptionPane;

/**
 *
 * @author sdedic
 */
public class ContactList extends javax.swing.JPanel {
    DefaultListModel   model = new DefaultListModel();
    
    /**
     * Creates new form ContacactList
     */
    public ContactList() {
        initComponents();
        listContacts.setModel(model);
        listContacts.setCellRenderer(new ContactItemRenderer());
        
        Path p = Paths.get("contactList");
        if (Files.exists(p)) {
            try {
                JSonReadWrite.readContactList(p).forEach((c) -> model.addElement(c));
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        listContacts = new javax.swing.JList<>();
        addContact = new javax.swing.JButton();
        removeContact = new javax.swing.JButton();
        editContact = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        listContacts.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listContacts.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                listContactsAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        listContacts.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listContactsValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(listContacts);

        addContact.setText("Add...");
        addContact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addContactActionPerformed(evt);
            }
        });

        removeContact.setText("Remove");
        removeContact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeContactActionPerformed(evt);
            }
        });

        editContact.setText("Edit...");
        editContact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editContactActionPerformed(evt);
            }
        });

        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        jButton1.setText("jButton1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 289, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addContact)
                    .addComponent(removeContact)
                    .addComponent(editContact)
                    .addComponent(saveButton)
                    .addComponent(jButton1))
                .addGap(9, 9, 9))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addContact)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(removeContact)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(editContact)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(saveButton))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 288, Short.MAX_VALUE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void removeContactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeContactActionPerformed
        int index = listContacts.getSelectedIndex();
        if (index < 0) {
            return;
        }
        model.remove(index);
    }//GEN-LAST:event_removeContactActionPerformed

    private void addContactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addContactActionPerformed
        ContactEditor editor = new ContactEditor();
        Contact c = new Contact();
        editor.setContactData(c);
        
        if (editor.showDialog("Add contact")) {
            editor.saveContactData(c);
            model.add(model.getSize(), c);
        }
        
    }//GEN-LAST:event_addContactActionPerformed

    private void editContactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editContactActionPerformed
        int index = listContacts.getSelectedIndex();
        if (index < 0) {
            return;
        }
        Contact c = (Contact)model.get(index);
        ContactEditor editor = new ContactEditor();
        editor.setContactData(c);
        if (editor.showDialog("Edit contact")) {
            editor.saveContactData(c);
        }
    }//GEN-LAST:event_editContactActionPerformed

    private void listContactsValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listContactsValueChanged
        int index = listContacts.getSelectedIndex();
        int count = listContacts.getSelectedValuesList().size();
        removeContact.setEnabled(index != -1);
        editContact.setEnabled(count == 1);
    }//GEN-LAST:event_listContactsValueChanged

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        List<Contact> contacts = new ArrayList<>();
        for (int i = 0; i < model.getSize(); i++) {
            contacts.add((Contact)model.getElementAt(i));
        }
        try {
            JSonReadWrite.saveContactList(Paths.get("contactList"), contacts);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage(), "Error saving contact list", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_saveButtonActionPerformed

    private void listContactsAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_listContactsAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_listContactsAncestorAdded

    static class ContactItemRenderer extends DefaultListCellRenderer {

        @Override
        public Component getListCellRendererComponent(JList<?> list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
            JLabel label = (JLabel)super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
            label.setFont(label.getFont().deriveFont(Font.PLAIN));
            Contact data = (Contact)value;
            String nickName = data.getNickName();
            String line = "<html>";
            switch (data.getDisplayFormat()) {
                case NickFirstLast:
                    if (nickName != null) {
                        line += nickName + ": ";
                    }
                    line += String.format("%s <b>%s</b>", data.getFirstName(), data.getLastName());
                    break;
                case NickLastFirst:
                    if (nickName != null) {
                        line += nickName + ": ";
                    }
                    line += String.format("<b>%s</b>, %s", data.getLastName(), data.getFirstName());
                    break;
                case LastFirst:
                    line += String.format("<b>%s</b>, %s", data.getLastName(), data.getFirstName());
                    break;
                default:
                    throw new AssertionError(data.getDisplayFormat().name());
                
            }
            line += "</html>";
            label.setText(line);
            return label;
        }
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addContact;
    private javax.swing.JButton editContact;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<Contact> listContacts;
    private javax.swing.JButton removeContact;
    private javax.swing.JButton saveButton;
    // End of variables declaration//GEN-END:variables
}
